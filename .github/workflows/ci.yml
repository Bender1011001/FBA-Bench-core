# Local dry-run (simulate what the workflow does):
#   cd repos/fba-bench-core
#   python -m pip install --upgrade pip
#   pip install -e . pytest ruff mypy
#   ruff check .
#   mypy src || true  # tolerate missing type configs in staging
#   pytest -q
#   # Golden masters JSON validation:
#   python - <<'PY'
#   import os, json, glob, sys
#   gm_dir = os.path.join('golden_masters')
#   if os.path.isdir(gm_dir):
#       fail = False
#       for p in glob.glob(os.path.join(gm_dir, '**', '*.json'), recursive=True):
#           try:
#               json.load(open(p, 'r', encoding='utf-8'))
#               print(f"[OK] {p}")
#           except Exception as e:
#               print(f"[FAIL] {p}: {e}")
#               fail = True
#       sys.exit(1 if fail else 0)
#   else:
#       print("golden_masters/ not found; skipping")
#       sys.exit(0)
#   PY

name: Core CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      python-version: "3.11"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: pip install ruff
      - run: ruff check .

  typecheck:
    name: Mypy Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: pip install mypy
      - run: mypy src || true

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: pip install -e . pytest
      - run: pytest -q

  golden_masters:
    name: Golden Masters Validation
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Validate Golden Masters
        run: |
          python - <<'PY'
          import os, json, glob, sys
          gm_dir = os.path.join('golden_masters')
          if os.path.isdir(gm_dir):
              fail = False
              for p in glob.glob(os.path.join(gm_dir, '**', '*.json'), recursive=True):
                  try:
                      json.load(open(p, 'r', encoding='utf-8'))
                      print(f"[OK] {p}")
                  except Exception as e:
                      print(f"[FAIL] {p}: {e}")
                      fail = True
              sys.exit(1 if fail else 0)
          else:
              print("golden_masters/ not found; skipping")
              sys.exit(0)
          PY