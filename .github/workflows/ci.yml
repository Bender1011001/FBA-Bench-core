name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint and Static Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Build press assets
        run: python scripts/build_assets.py

      - name: Install validation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema pyyaml

      - name: Validate scenarios schema
        run: python scripts/validate_scenarios.py
        continue-on-error: true

      - name: Validate repository data
        run: python scripts/validate_all.py
        continue-on-error: true

      - name: Install lint tooling
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit ruff mypy detect-secrets

      - name: Run pre-commit (ruff, ruff-format, detect-secrets)
        run: |
          pre-commit run --all-files

      - name: Run mypy (permissive)
        continue-on-error: true
        run: |
          mypy --version
          mypy src || true

  test:
    name: Test (pytest + coverage) py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install project and test deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest coverage

      - name: Run tests with coverage
        run: |
          coverage run -m pytest -q
          coverage xml
          coverage report -m

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-py${{ matrix.python-version }}
          path: coverage.xml

  validate_golden_masters:
    name: Validate Golden Masters
    runs-on: ubuntu-latest
    needs: [ lint ]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run golden masters validator
        run: |
          python scripts/validate_golden_masters.py

  validate_site:
    name: Validate Site (HTML + JSON)
    runs-on: ubuntu-latest
    needs: [ lint ]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate JSON syntax in site/data
        run: |
          python - << 'PY'
          import glob, json, sys
          files = glob.glob('site/data/*.json')
          ok = True
          for f in files:
              try:
                  with open(f, 'r', encoding='utf-8') as fh:
                      json.load(fh)
                  print(f"OK: {f}")
              except Exception as e:
                  ok = False
                  print(f"ERROR: {f}: {e}", file=sys.stderr)
          sys.exit(0 if ok else 1)
          PY

      - name: Install tidy for HTML lint
        run: |
          sudo apt-get update
          sudo apt-get install -y tidy

      - name: Lint HTML files with tidy
        run: |
          set -e
          for f in site/*.html; do
            echo "Tidying $f"
            tidy -q -e "$f" || true
          done

  validate_repo:
    name: Validate Repo (schemas)
    runs-on: ubuntu-latest
    needs: [ lint ]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install validation deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema pyyaml

      - name: Run repository validation (schemas)
        run: |
          python scripts/validate_all.py